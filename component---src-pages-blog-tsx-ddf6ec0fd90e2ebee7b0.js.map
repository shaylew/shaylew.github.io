{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["PostSummary","styled","article","marginBottom","rhythm","PostHeader","header","boxShadow","BlogIndex","props","data","location","siteTitle","site","siteMetadata","title","posts","allMdx","edges","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"6FAAA,sIAWMA,EAAcC,IAAOC,QAAQ,CACjCC,aAAcC,YAAO,KAGjBC,EAAaJ,IAAOK,OAAO,CAC/B,OAAQ,CACNH,aAAcC,YAAO,MAEvB,MAAO,CACLG,UAAW,UAsCAC,UAlCuC,SAAAC,GAAS,MACrDC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACRC,EAAS,UAAGF,EAAKG,YAAR,aAAG,EAAWC,aAAaC,MACpCC,EAAQN,EAAKO,OAAOC,MAEpBH,EAAQ,aAAeH,EAAY,MAAMA,EAAc,IAE7D,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUI,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAM,cACVC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAACvB,EAAD,CAAawB,IAAKJ,EAAKE,OAAOC,MAC5B,kBAAClB,EAAD,KACE,4BACE,kBAAC,OAAD,CAAMoB,GAAIL,EAAKE,OAAOC,MAAOR,IAE/B,+BAAQK,EAAKC,YAAYK,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQR,EAAKC,YAAYQ,aAAeT,EAAKU,kBAaxD,IAAMC,EAAY","file":"component---src-pages-blog-tsx-ddf6ec0fd90e2ebee7b0.js","sourcesContent":["import React from 'react';\nimport { PageProps, Link, graphql } from 'gatsby';\n\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nimport { BlogPageQuery } from '../types/graphql';\n\nconst PostSummary = styled.article({\n  marginBottom: rhythm(2),\n});\n\nconst PostHeader = styled.header({\n  '& h3': {\n    marginBottom: rhythm(0.25),\n  },\n  '& a': {\n    boxShadow: 'none',\n  },\n});\n\nconst BlogIndex: React.FC<PageProps<BlogPageQuery>> = props => {\n  const { data, location } = props;\n  const siteTitle = data.site?.siteMetadata.title;\n  const posts = data.allMdx.edges;\n\n  const title = 'All Posts' + (siteTitle ? ` - ${siteTitle}` : '');\n\n  return (\n    <Layout location={location} title={title}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <PostSummary key={node.fields.slug}>\n            <PostHeader>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </PostHeader>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              ></p>\n            </section>\n          </PostSummary>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query BlogPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { postType: { eq: \"blog-post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}